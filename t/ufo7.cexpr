;; c
(include "runtime.c")

(define ((struct scm) scm-main ((struct scm) env2498))
  (declare (struct scm) r0)
  (declare (struct scm) r1)
  (declare (struct scm) r2)
  (declare (struct scm) r3)
  (declare (struct scm) r4)
  (declare (struct scm) r5)
  (declare (struct scm) r6)
  (declare (struct scm) r7)
  (declare (struct scm) r8)
  (declare (struct scm) r9)
  (declare (struct scm) r10)
  (declare (struct scm) r14)
  (declare (struct scm) r18)
  (declare (struct scm) r22)
  (declare (struct scm) r23)
  (declare (struct scm) r27)
  (declare (struct scm) r31)
  (declare (struct scm) r32)
  (declare (struct scm) r36)
  (declare (struct scm) r40)
  (declare (struct scm) r41)
  (declare (struct scm) r45)
  (declare (struct scm) r49)
  (declare (struct scm) r50)
  (declare (struct scm) r54)
  (declare (struct scm) r58)
  (declare (struct scm) r59)
  (declare (struct scm) r63)
  (declare (struct scm) r67)
  (declare (struct scm) r68)
  (declare (struct scm) r72)
  (declare (struct scm) r76)
  (declare (struct scm) r77)
  (declare (struct scm) r81)
  (declare (struct scm) r85)
  (declare (struct scm) r86)
  (declare (struct scm) r90)
  (declare (struct scm) r94)
  (declare (struct scm) r95)
  (declare (struct scm) clor11)
  (set! clor11 (scm-wrap-fptr begin10))
  (declare (struct scm) clor15)
  (set! clor15 (scm-wrap-fptr scm-print))
  (set! r14 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo16)
  (declare (struct scm) env17)
  (set! clo16
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor15 val) v) elt) 0)
        val)
      f))
  (set! env17
    (array-ref (struct->ref (struct-ref (struct-ref clor15 val) v) elt) 1))
  (set! r1 (clo16 env17 r14))
  (declare (struct scm) clor19)
  (set! clor19 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor24)
  (set! clor24 (scm-wrap-fptr scm-eq))
  (set! r22 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r23 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo25)
  (declare (struct scm) env26)
  (set! clo25
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor24 val) v) elt) 0)
        val)
      f))
  (set! env26
    (array-ref (struct->ref (struct-ref (struct-ref clor24 val) v) elt) 1))
  (set! r18 (clo25 env26 r22 r23))
  (declare (type scm-fptr) clo20)
  (declare (struct scm) env21)
  (set! clo20
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor19 val) v) elt) 0)
        val)
      f))
  (set! env21
    (array-ref (struct->ref (struct-ref (struct-ref clor19 val) v) elt) 1))
  (set! r2 (clo20 env21 r18))
  (declare (struct scm) clor28)
  (set! clor28 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor33)
  (set! clor33 (scm-wrap-fptr scm-gteq))
  (set! r31 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r32 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo34)
  (declare (struct scm) env35)
  (set! clo34
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor33 val) v) elt) 0)
        val)
      f))
  (set! env35
    (array-ref (struct->ref (struct-ref (struct-ref clor33 val) v) elt) 1))
  (set! r27 (clo34 env35 r31 r32))
  (declare (type scm-fptr) clo29)
  (declare (struct scm) env30)
  (set! clo29
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor28 val) v) elt) 0)
        val)
      f))
  (set! env30
    (array-ref (struct->ref (struct-ref (struct-ref clor28 val) v) elt) 1))
  (set! r3 (clo29 env30 r27))
  (declare (struct scm) clor37)
  (set! clor37 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor42)
  (set! clor42 (scm-wrap-fptr scm-lteq))
  (set! r40 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r41 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo43)
  (declare (struct scm) env44)
  (set! clo43
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor42 val) v) elt) 0)
        val)
      f))
  (set! env44
    (array-ref (struct->ref (struct-ref (struct-ref clor42 val) v) elt) 1))
  (set! r36 (clo43 env44 r40 r41))
  (declare (type scm-fptr) clo38)
  (declare (struct scm) env39)
  (set! clo38
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor37 val) v) elt) 0)
        val)
      f))
  (set! env39
    (array-ref (struct->ref (struct-ref (struct-ref clor37 val) v) elt) 1))
  (set! r4 (clo38 env39 r36))
  (declare (struct scm) clor46)
  (set! clor46 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor51)
  (set! clor51 (scm-wrap-fptr scm-gt))
  (set! r49 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r50 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo52)
  (declare (struct scm) env53)
  (set! clo52
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor51 val) v) elt) 0)
        val)
      f))
  (set! env53
    (array-ref (struct->ref (struct-ref (struct-ref clor51 val) v) elt) 1))
  (set! r45 (clo52 env53 r49 r50))
  (declare (type scm-fptr) clo47)
  (declare (struct scm) env48)
  (set! clo47
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor46 val) v) elt) 0)
        val)
      f))
  (set! env48
    (array-ref (struct->ref (struct-ref (struct-ref clor46 val) v) elt) 1))
  (set! r5 (clo47 env48 r45))
  (declare (struct scm) clor55)
  (set! clor55 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor60)
  (set! clor60 (scm-wrap-fptr scm-lt))
  (set! r58 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r59 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo61)
  (declare (struct scm) env62)
  (set! clo61
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor60 val) v) elt) 0)
        val)
      f))
  (set! env62
    (array-ref (struct->ref (struct-ref (struct-ref clor60 val) v) elt) 1))
  (set! r54 (clo61 env62 r58 r59))
  (declare (type scm-fptr) clo56)
  (declare (struct scm) env57)
  (set! clo56
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor55 val) v) elt) 0)
        val)
      f))
  (set! env57
    (array-ref (struct->ref (struct-ref (struct-ref clor55 val) v) elt) 1))
  (set! r6 (clo56 env57 r54))
  (declare (struct scm) clor64)
  (set! clor64 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor69)
  (set! clor69 (scm-wrap-fptr scm-plus))
  (set! r67 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r68 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo70)
  (declare (struct scm) env71)
  (set! clo70
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor69 val) v) elt) 0)
        val)
      f))
  (set! env71
    (array-ref (struct->ref (struct-ref (struct-ref clor69 val) v) elt) 1))
  (set! r63 (clo70 env71 r67 r68))
  (declare (type scm-fptr) clo65)
  (declare (struct scm) env66)
  (set! clo65
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor64 val) v) elt) 0)
        val)
      f))
  (set! env66
    (array-ref (struct->ref (struct-ref (struct-ref clor64 val) v) elt) 1))
  (set! r7 (clo65 env66 r63))
  (declare (struct scm) clor73)
  (set! clor73 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor78)
  (set! clor78 (scm-wrap-fptr scm-minus))
  (set! r76 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r77 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo79)
  (declare (struct scm) env80)
  (set! clo79
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor78 val) v) elt) 0)
        val)
      f))
  (set! env80
    (array-ref (struct->ref (struct-ref (struct-ref clor78 val) v) elt) 1))
  (set! r72 (clo79 env80 r76 r77))
  (declare (type scm-fptr) clo74)
  (declare (struct scm) env75)
  (set! clo74
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor73 val) v) elt) 0)
        val)
      f))
  (set! env75
    (array-ref (struct->ref (struct-ref (struct-ref clor73 val) v) elt) 1))
  (set! r8 (clo74 env75 r72))
  (declare (struct scm) clor82)
  (set! clor82 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor87)
  (set! clor87 (scm-wrap-fptr scm-multiply))
  (set! r85 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r86 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo88)
  (declare (struct scm) env89)
  (set! clo88
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor87 val) v) elt) 0)
        val)
      f))
  (set! env89
    (array-ref (struct->ref (struct-ref (struct-ref clor87 val) v) elt) 1))
  (set! r81 (clo88 env89 r85 r86))
  (declare (type scm-fptr) clo83)
  (declare (struct scm) env84)
  (set! clo83
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor82 val) v) elt) 0)
        val)
      f))
  (set! env84
    (array-ref (struct->ref (struct-ref (struct-ref clor82 val) v) elt) 1))
  (set! r9 (clo83 env84 r81))
  (declare (struct scm) clor91)
  (set! clor91 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor96)
  (set! clor96 (scm-wrap-fptr scm-divide))
  (set! r94 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r95 (make-struct (struct scm) (tag 0) (val.i 1)))
  (declare (type scm-fptr) clo97)
  (declare (struct scm) env98)
  (set! clo97
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor96 val) v) elt) 0)
        val)
      f))
  (set! env98
    (array-ref (struct->ref (struct-ref (struct-ref clor96 val) v) elt) 1))
  (set! r90 (clo97 env98 r94 r95))
  (declare (type scm-fptr) clo92)
  (declare (struct scm) env93)
  (set! clo92
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor91 val) v) elt) 0)
        val)
      f))
  (set! env93
    (array-ref (struct->ref (struct-ref (struct-ref clor91 val) v) elt) 1))
  (set! r10 (clo92 env93 r90))
  (declare (type scm-fptr) clo12)
  (declare (struct scm) env13)
  (set! clo12
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor11 val) v) elt) 0)
        val)
      f))
  (set! env13
    (array-ref (struct->ref (struct-ref (struct-ref clor11 val) v) elt) 1))
  (set! r0 (clo12 env13 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10))
  (return r0))

(define ((struct scm)
         begin
         ((struct scm) env2498)
         ((struct scm) a)
         ((struct scm) b))
  (declare (struct scm) r99)
  (set! r99 b)
  (return r99))

(define ((struct scm)
         begin10
         ((struct scm) env2498)
         ((struct scm) a)
         ((struct scm) b)
         ((struct scm) c)
         ((struct scm) d)
         ((struct scm) e)
         ((struct scm) f)
         ((struct scm) g)
         ((struct scm) h)
         ((struct scm) i)
         ((struct scm) j))
  (declare (struct scm) r100)
  (declare (struct scm) r101)
  (declare (struct scm) r102)
  (declare (struct scm) r106)
  (declare (struct scm) r107)
  (declare (struct scm) r111)
  (declare (struct scm) r112)
  (declare (struct scm) r116)
  (declare (struct scm) r117)
  (declare (struct scm) r121)
  (declare (struct scm) r122)
  (declare (struct scm) r126)
  (declare (struct scm) r127)
  (declare (struct scm) r131)
  (declare (struct scm) r132)
  (declare (struct scm) r136)
  (declare (struct scm) r137)
  (declare (struct scm) r141)
  (declare (struct scm) r142)
  (declare (struct scm) clor103)
  (set! clor103 (scm-wrap-fptr begin))
  (set! r101 a)
  (declare (struct scm) clor108)
  (set! clor108 (scm-wrap-fptr begin))
  (set! r106 b)
  (declare (struct scm) clor113)
  (set! clor113 (scm-wrap-fptr begin))
  (set! r111 c)
  (declare (struct scm) clor118)
  (set! clor118 (scm-wrap-fptr begin))
  (set! r116 d)
  (declare (struct scm) clor123)
  (set! clor123 (scm-wrap-fptr begin))
  (set! r121 e)
  (declare (struct scm) clor128)
  (set! clor128 (scm-wrap-fptr begin))
  (set! r126 f)
  (declare (struct scm) clor133)
  (set! clor133 (scm-wrap-fptr begin))
  (set! r131 g)
  (declare (struct scm) clor138)
  (set! clor138 (scm-wrap-fptr begin))
  (set! r136 h)
  (declare (struct scm) clor143)
  (set! clor143 (scm-wrap-fptr begin))
  (set! r141 i)
  (set! r142 j)
  (declare (type scm-fptr) clo144)
  (declare (struct scm) env145)
  (set! clo144
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor143 val) v) elt) 0)
        val)
      f))
  (set! env145
    (array-ref (struct->ref (struct-ref (struct-ref clor143 val) v) elt) 1))
  (set! r137 (clo144 env145 r141 r142))
  (declare (type scm-fptr) clo139)
  (declare (struct scm) env140)
  (set! clo139
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor138 val) v) elt) 0)
        val)
      f))
  (set! env140
    (array-ref (struct->ref (struct-ref (struct-ref clor138 val) v) elt) 1))
  (set! r132 (clo139 env140 r136 r137))
  (declare (type scm-fptr) clo134)
  (declare (struct scm) env135)
  (set! clo134
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor133 val) v) elt) 0)
        val)
      f))
  (set! env135
    (array-ref (struct->ref (struct-ref (struct-ref clor133 val) v) elt) 1))
  (set! r127 (clo134 env135 r131 r132))
  (declare (type scm-fptr) clo129)
  (declare (struct scm) env130)
  (set! clo129
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor128 val) v) elt) 0)
        val)
      f))
  (set! env130
    (array-ref (struct->ref (struct-ref (struct-ref clor128 val) v) elt) 1))
  (set! r122 (clo129 env130 r126 r127))
  (declare (type scm-fptr) clo124)
  (declare (struct scm) env125)
  (set! clo124
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor123 val) v) elt) 0)
        val)
      f))
  (set! env125
    (array-ref (struct->ref (struct-ref (struct-ref clor123 val) v) elt) 1))
  (set! r117 (clo124 env125 r121 r122))
  (declare (type scm-fptr) clo119)
  (declare (struct scm) env120)
  (set! clo119
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor118 val) v) elt) 0)
        val)
      f))
  (set! env120
    (array-ref (struct->ref (struct-ref (struct-ref clor118 val) v) elt) 1))
  (set! r112 (clo119 env120 r116 r117))
  (declare (type scm-fptr) clo114)
  (declare (struct scm) env115)
  (set! clo114
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor113 val) v) elt) 0)
        val)
      f))
  (set! env115
    (array-ref (struct->ref (struct-ref (struct-ref clor113 val) v) elt) 1))
  (set! r107 (clo114 env115 r111 r112))
  (declare (type scm-fptr) clo109)
  (declare (struct scm) env110)
  (set! clo109
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor108 val) v) elt) 0)
        val)
      f))
  (set! env110
    (array-ref (struct->ref (struct-ref (struct-ref clor108 val) v) elt) 1))
  (set! r102 (clo109 env110 r106 r107))
  (declare (type scm-fptr) clo104)
  (declare (struct scm) env105)
  (set! clo104
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor103 val) v) elt) 0)
        val)
      f))
  (set! env105
    (array-ref (struct->ref (struct-ref (struct-ref clor103 val) v) elt) 1))
  (set! r100 (clo104 env105 r101 r102))
  (return r100))

