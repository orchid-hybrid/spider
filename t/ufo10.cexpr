;; c
(include "runtime.c")

(define ((struct scm) scm-main ((struct scm) env2498))
  (declare (struct scm) r0)
  (declare (struct scm) r1)
  (declare (struct scm) r5)
  (declare (struct scm) r6)
  (declare (struct scm) r10)
  (declare (struct scm) clor2)
  (set! clor2 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor7)
  (set! clor7 (scm-wrap-fptr scm-make-vector))
  (set! r5 (make-struct (struct scm) (tag 0) (val.i 5)))
  (set! r10 (allocate-vector 0))
  (set! r6 (make-closure g2499 r10))
  (declare (type scm-fptr) clo8)
  (declare (struct scm) env9)
  (set! clo8
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor7 val) v) elt) 0)
        val)
      f))
  (set! env9
    (array-ref (struct->ref (struct-ref (struct-ref clor7 val) v) elt) 1))
  (set! r1 (clo8 env9 r5 r6))
  (declare (type scm-fptr) clo3)
  (declare (struct scm) env4)
  (set! clo3
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor2 val) v) elt) 0)
        val)
      f))
  (set! env4
    (array-ref (struct->ref (struct-ref (struct-ref clor2 val) v) elt) 1))
  (set! r0 (clo3 env4 r1))
  (return r0))

(define ((struct scm) g2499 ((struct scm) env2498) ((struct scm) i))
  (declare (struct scm) r11)
  (declare (struct scm) r12)
  (declare (struct scm) r13)
  (declare (struct scm) clor14)
  (set! clor14 (scm-wrap-fptr scm-vector-ref))
  (set! r12 (scm-string-to-vector "Hello world"))
  (set! r13 i)
  (declare (type scm-fptr) clo15)
  (declare (struct scm) env16)
  (set! clo15
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor14 val) v) elt) 0)
        val)
      f))
  (set! env16
    (array-ref (struct->ref (struct-ref (struct-ref clor14 val) v) elt) 1))
  (set! r11 (clo15 env16 r12 r13))
  (return r11))

