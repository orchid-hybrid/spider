;; c
(include "runtime.c")

(define ((struct scm)
         foo
         ((struct scm) env2501)
         ((struct scm) foo2498)
         ((struct scm) bar2499))
  (declare (struct scm) r0)
  (declare (struct scm) r1)
  (declare (struct scm) r2)
  (declare (struct scm) r6)
  (declare (struct scm) clor3)
  (set! r6 (allocate-vector 0))
  (set! clor3 (make-closure g2502 r6))
  (set! r1 foo2498)
  (set! r2 bar2499)
  (declare (type scm-fptr) clo4)
  (declare (struct scm) env5)
  (set! clo4
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor3 val) v) elt) 0)
        val)
      f))
  (set! env5
    (array-ref (struct->ref (struct-ref (struct-ref clor3 val) v) elt) 1))
  (set! r0 (clo4 env5 r1 r2))
  (return r0))

(define ((struct scm) bar ((struct scm) env2501) ((struct scm) baz2500))
  (declare (struct scm) r7)
  (set! r7 baz2500)
  (return r7))

(define ((struct scm) baz ((struct scm) env2501) ((struct scm) quux))
  (declare (struct scm) r8)
  (set! r8 quux)
  (return r8))

(define ((struct scm) scm-main ((struct scm) env2501))
  (declare (struct scm) r9)
  (declare (struct scm) r10)
  (declare (struct scm) r11)
  (declare (struct scm) r15)
  (declare (struct scm) clor12)
  (set! clor12 (scm-wrap-fptr foo))
  (set! r15 (allocate-vector 0))
  (set! r10 (make-closure g2503 r15))
  (set! r11 (scm-wrap-fptr baz))
  (declare (type scm-fptr) clo13)
  (declare (struct scm) env14)
  (set! clo13
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor12 val) v) elt) 0)
        val)
      f))
  (set! env14
    (array-ref (struct->ref (struct-ref (struct-ref clor12 val) v) elt) 1))
  (set! r9 (clo13 env14 r10 r11))
  (return r9))

(define ((struct scm) g2503 ((struct scm) env2501) ((struct scm) x))
  (declare (struct scm) r16)
  (declare (struct scm) r17)
  (declare (struct scm) clor18)
  (set! clor18 (scm-wrap-fptr scm-print))
  (set! r17 (scm-string-to-vector "scoping seems to work out!"))
  (declare (type scm-fptr) clo19)
  (declare (struct scm) env20)
  (set! clo19
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor18 val) v) elt) 0)
        val)
      f))
  (set! env20
    (array-ref (struct->ref (struct-ref (struct-ref clor18 val) v) elt) 1))
  (set! r16 (clo19 env20 r17))
  (return r16))

(define ((struct scm)
         g2502
         ((struct scm) env2501)
         ((struct scm) foo2498)
         ((struct scm) bar2499))
  (declare (struct scm) r21)
  (declare (struct scm) r22)
  (declare (struct scm) r26)
  (declare (struct scm) clor23)
  (set! clor23 foo2498)
  (declare (struct scm) clor27)
  (set! clor27 bar2499)
  (set! r26 foo2498)
  (declare (type scm-fptr) clo28)
  (declare (struct scm) env29)
  (set! clo28
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor27 val) v) elt) 0)
        val)
      f))
  (set! env29
    (array-ref (struct->ref (struct-ref (struct-ref clor27 val) v) elt) 1))
  (set! r22 (clo28 env29 r26))
  (declare (type scm-fptr) clo24)
  (declare (struct scm) env25)
  (set! clo24
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor23 val) v) elt) 0)
        val)
      f))
  (set! env25
    (array-ref (struct->ref (struct-ref (struct-ref clor23 val) v) elt) 1))
  (set! r21 (clo24 env25 r22))
  (return r21))

