;; c
(include "runtime.c")

(define ((struct scm) scm-main ((struct scm) env2498))
  (declare (struct scm) r0)
  (declare (struct scm) r1)
  (declare (struct scm) r2)
  (declare (struct scm) r6)
  (declare (struct scm) r7)
  (declare (struct scm) r11)
  (declare (struct scm) r12)
  (declare (struct scm) r25)
  (refcount-dec env2498 1)
  (declare (struct scm) clor3)
  (declare (struct scm) clor8)
  (set! clor8 (scm-wrap-fptr mul))
  (declare (struct scm) clor13)
  (set! clor13 (scm-wrap-fptr add))
  (declare (struct scm) clor16)
  (set! clor16 (scm-wrap-fptr three))
  (declare (type scm-fptr) clo17)
  (declare (struct scm) env18)
  (set! clo17
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor16 val) v) elt) 0)
        val)
      f))
  (set! env18
    (array-ref (struct->ref (struct-ref (struct-ref clor16 val) v) elt) 1))
  (refcount-inc-one env18)
  (set! r11 (clo17 env18))
  (refcount-dec-one clor16)
  (declare (struct scm) clor19)
  (set! clor19 (scm-wrap-fptr two))
  (declare (type scm-fptr) clo20)
  (declare (struct scm) env21)
  (set! clo20
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor19 val) v) elt) 0)
        val)
      f))
  (set! env21
    (array-ref (struct->ref (struct-ref (struct-ref clor19 val) v) elt) 1))
  (refcount-inc-one env21)
  (set! r12 (clo20 env21))
  (refcount-dec-one clor19)
  (declare (type scm-fptr) clo14)
  (declare (struct scm) env15)
  (set! clo14
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor13 val) v) elt) 0)
        val)
      f))
  (set! env15
    (array-ref (struct->ref (struct-ref (struct-ref clor13 val) v) elt) 1))
  (refcount-inc-one env15)
  (set! r6 (clo14 env15 r11 r12))
  (refcount-dec-one clor13)
  (declare (struct scm) clor22)
  (set! clor22 (scm-wrap-fptr three))
  (declare (type scm-fptr) clo23)
  (declare (struct scm) env24)
  (set! clo23
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor22 val) v) elt) 0)
        val)
      f))
  (set! env24
    (array-ref (struct->ref (struct-ref (struct-ref clor22 val) v) elt) 1))
  (refcount-inc-one env24)
  (set! r7 (clo23 env24))
  (refcount-dec-one clor22)
  (declare (type scm-fptr) clo9)
  (declare (struct scm) env10)
  (set! clo9
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor8 val) v) elt) 0)
        val)
      f))
  (set! env10
    (array-ref (struct->ref (struct-ref (struct-ref clor8 val) v) elt) 1))
  (refcount-inc-one env10)
  (set! clor3 (clo9 env10 r6 r7))
  (refcount-dec-one clor8)
  (set! r1 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r25 (allocate-vector 0))
  (set! r2 (make-closure g2499 r25))
  (declare (type scm-fptr) clo4)
  (declare (struct scm) env5)
  (set! clo4
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor3 val) v) elt) 0)
        val)
      f))
  (set! env5
    (array-ref (struct->ref (struct-ref (struct-ref clor3 val) v) elt) 1))
  (refcount-inc-one env5)
  (set! r0 (clo4 env5 r1 r2))
  (refcount-dec-one clor3)
  (return r0))

(define ((struct scm) one ((struct scm) env2498))
  (declare (struct scm) r26)
  (declare (struct scm) r27)
  (refcount-dec env2498 1)
  (set! r27 (allocate-vector 0))
  (set! r26 (make-closure g2500 r27))
  (return r26))

(define ((struct scm) two ((struct scm) env2498))
  (declare (struct scm) r28)
  (declare (struct scm) r29)
  (refcount-dec env2498 1)
  (set! r29 (allocate-vector 0))
  (set! r28 (make-closure g2501 r29))
  (return r28))

(define ((struct scm) three ((struct scm) env2498))
  (declare (struct scm) r30)
  (declare (struct scm) r31)
  (refcount-dec env2498 1)
  (set! r31 (allocate-vector 0))
  (set! r30 (make-closure g2502 r31))
  (return r30))

(define ((struct scm)
         add
         ((struct scm) env2498)
         ((struct scm) x)
         ((struct scm) y))
  (declare (struct scm) r32)
  (declare (struct scm) r33)
  (declare (struct scm) r34)
  (declare (struct scm) r35)
  (refcount-dec env2498 1)
  (set! r34 x)
  (set! r35 y)
  (set! r33 (allocate-vector 2))
  (scm-vector-insert! r33 r34 0)
  (scm-vector-insert! r33 r35 1)
  (set! r32 (make-closure g2503 r33))
  (return r32))

(define ((struct scm)
         mul
         ((struct scm) env2498)
         ((struct scm) x)
         ((struct scm) y))
  (declare (struct scm) r36)
  (declare (struct scm) r37)
  (declare (struct scm) r38)
  (declare (struct scm) r39)
  (refcount-dec env2498 1)
  (set! r38 y)
  (set! r39 x)
  (set! r37 (allocate-vector 2))
  (scm-vector-insert! r37 r38 0)
  (scm-vector-insert! r37 r39 1)
  (set! r36 (make-closure g2505 r37))
  (return r36))

(define ((struct scm)
         g2505
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r40)
  (declare (struct scm) r41)
  (declare (struct scm) r42)
  (declare (struct scm) r46)
  (declare (struct scm) r47)
  (declare (struct scm) r48)
  (declare (struct scm) r49)
  (declare (struct scm) r50)
  (declare (struct scm) r51)
  (declare (struct scm) r52)
  (declare (struct scm) r53)
  (declare (struct scm) r54)
  (refcount-inc env2498 1)
  (declare (struct scm) clor43)
  (set! r46 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r47 env2498)
  (set! r48 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! clor43 (scm-vector-ref r46 r47 r48))
  (set! r41 z)
  (set! r50 s)
  (set! r52 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r53 env2498)
  (set! r54 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r51 (scm-vector-ref r52 r53 r54))
  (set! r49 (allocate-vector 2))
  (scm-vector-insert! r49 r50 0)
  (scm-vector-insert! r49 r51 1)
  (set! r42 (make-closure g2504 r49))
  (declare (type scm-fptr) clo44)
  (declare (struct scm) env45)
  (set! clo44
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor43 val) v) elt) 0)
        val)
      f))
  (set! env45
    (array-ref (struct->ref (struct-ref (struct-ref clor43 val) v) elt) 1))
  (refcount-inc-one env45)
  (set! r40 (clo44 env45 r41 r42))
  (refcount-dec-one clor43)
  (return r40))

(define ((struct scm) g2504 ((struct scm) env2498) ((struct scm) z))
  (declare (struct scm) r55)
  (declare (struct scm) r56)
  (declare (struct scm) r57)
  (declare (struct scm) r61)
  (declare (struct scm) r62)
  (declare (struct scm) r63)
  (declare (struct scm) r64)
  (declare (struct scm) r65)
  (declare (struct scm) r66)
  (refcount-inc env2498 1)
  (declare (struct scm) clor58)
  (set! r61 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r62 env2498)
  (set! r63 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! clor58 (scm-vector-ref r61 r62 r63))
  (set! r56 z)
  (set! r64 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r65 env2498)
  (set! r66 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r57 (scm-vector-ref r64 r65 r66))
  (declare (type scm-fptr) clo59)
  (declare (struct scm) env60)
  (set! clo59
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor58 val) v) elt) 0)
        val)
      f))
  (set! env60
    (array-ref (struct->ref (struct-ref (struct-ref clor58 val) v) elt) 1))
  (refcount-inc-one env60)
  (set! r55 (clo59 env60 r56 r57))
  (refcount-dec-one clor58)
  (return r55))

(define ((struct scm)
         g2503
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r67)
  (declare (struct scm) r68)
  (declare (struct scm) r69)
  (declare (struct scm) r73)
  (declare (struct scm) r74)
  (declare (struct scm) r75)
  (declare (struct scm) r76)
  (declare (struct scm) r77)
  (declare (struct scm) r81)
  (declare (struct scm) r82)
  (declare (struct scm) r83)
  (refcount-inc env2498 1)
  (refcount-inc s 1)
  (declare (struct scm) clor70)
  (set! r73 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r74 env2498)
  (set! r75 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! clor70 (scm-vector-ref r73 r74 r75))
  (declare (struct scm) clor78)
  (set! r81 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r82 env2498)
  (set! r83 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! clor78 (scm-vector-ref r81 r82 r83))
  (set! r76 z)
  (set! r77 s)
  (declare (type scm-fptr) clo79)
  (declare (struct scm) env80)
  (set! clo79
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor78 val) v) elt) 0)
        val)
      f))
  (set! env80
    (array-ref (struct->ref (struct-ref (struct-ref clor78 val) v) elt) 1))
  (refcount-inc-one env80)
  (set! r68 (clo79 env80 r76 r77))
  (refcount-dec-one clor78)
  (set! r69 s)
  (declare (type scm-fptr) clo71)
  (declare (struct scm) env72)
  (set! clo71
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor70 val) v) elt) 0)
        val)
      f))
  (set! env72
    (array-ref (struct->ref (struct-ref (struct-ref clor70 val) v) elt) 1))
  (refcount-inc-one env72)
  (set! r67 (clo71 env72 r68 r69))
  (refcount-dec-one clor70)
  (return r67))

(define ((struct scm)
         g2502
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r84)
  (declare (struct scm) r85)
  (declare (struct scm) r89)
  (declare (struct scm) r93)
  (refcount-dec env2498 1)
  (refcount-inc s 2)
  (declare (struct scm) clor86)
  (set! clor86 s)
  (declare (struct scm) clor90)
  (set! clor90 s)
  (declare (struct scm) clor94)
  (set! clor94 s)
  (set! r93 z)
  (declare (type scm-fptr) clo95)
  (declare (struct scm) env96)
  (set! clo95
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor94 val) v) elt) 0)
        val)
      f))
  (set! env96
    (array-ref (struct->ref (struct-ref (struct-ref clor94 val) v) elt) 1))
  (refcount-inc-one env96)
  (set! r89 (clo95 env96 r93))
  (refcount-dec-one clor94)
  (declare (type scm-fptr) clo91)
  (declare (struct scm) env92)
  (set! clo91
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor90 val) v) elt) 0)
        val)
      f))
  (set! env92
    (array-ref (struct->ref (struct-ref (struct-ref clor90 val) v) elt) 1))
  (refcount-inc-one env92)
  (set! r85 (clo91 env92 r89))
  (refcount-dec-one clor90)
  (declare (type scm-fptr) clo87)
  (declare (struct scm) env88)
  (set! clo87
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor86 val) v) elt) 0)
        val)
      f))
  (set! env88
    (array-ref (struct->ref (struct-ref (struct-ref clor86 val) v) elt) 1))
  (refcount-inc-one env88)
  (set! r84 (clo87 env88 r85))
  (refcount-dec-one clor86)
  (return r84))

(define ((struct scm)
         g2501
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r97)
  (declare (struct scm) r98)
  (declare (struct scm) r102)
  (refcount-dec env2498 1)
  (refcount-inc s 1)
  (declare (struct scm) clor99)
  (set! clor99 s)
  (declare (struct scm) clor103)
  (set! clor103 s)
  (set! r102 z)
  (declare (type scm-fptr) clo104)
  (declare (struct scm) env105)
  (set! clo104
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor103 val) v) elt) 0)
        val)
      f))
  (set! env105
    (array-ref (struct->ref (struct-ref (struct-ref clor103 val) v) elt) 1))
  (refcount-inc-one env105)
  (set! r98 (clo104 env105 r102))
  (refcount-dec-one clor103)
  (declare (type scm-fptr) clo100)
  (declare (struct scm) env101)
  (set! clo100
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor99 val) v) elt) 0)
        val)
      f))
  (set! env101
    (array-ref (struct->ref (struct-ref (struct-ref clor99 val) v) elt) 1))
  (refcount-inc-one env101)
  (set! r97 (clo100 env101 r98))
  (refcount-dec-one clor99)
  (return r97))

(define ((struct scm)
         g2500
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r106)
  (declare (struct scm) r107)
  (refcount-dec env2498 1)
  (declare (struct scm) clor108)
  (set! clor108 s)
  (set! r107 z)
  (declare (type scm-fptr) clo109)
  (declare (struct scm) env110)
  (set! clo109
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor108 val) v) elt) 0)
        val)
      f))
  (set! env110
    (array-ref (struct->ref (struct-ref (struct-ref clor108 val) v) elt) 1))
  (refcount-inc-one env110)
  (set! r106 (clo109 env110 r107))
  (refcount-dec-one clor108)
  (return r106))

(define ((struct scm) g2499 ((struct scm) env2498) ((struct scm) i))
  (declare (struct scm) r111)
  (declare (struct scm) r112)
  (refcount-dec env2498 1)
  (refcount-dec i 1)
  (declare (struct scm) clor113)
  (set! clor113 (scm-wrap-fptr scm-print))
  (set! r112 (scm-string-to-vector "i"))
  (declare (type scm-fptr) clo114)
  (declare (struct scm) env115)
  (set! clo114
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor113 val) v) elt) 0)
        val)
      f))
  (set! env115
    (array-ref (struct->ref (struct-ref (struct-ref clor113 val) v) elt) 1))
  (refcount-inc-one env115)
  (set! r111 (clo114 env115 r112))
  (refcount-dec-one clor113)
  (return r111))

