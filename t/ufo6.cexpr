;; c
(include "runtime.c")

(define ((struct scm) scm-main ((struct scm) env2498))
  (declare (struct scm) r0)
  (declare (struct scm) r1)
  (declare (struct scm) r5)
  (declare (struct scm) r9)
  (declare (struct scm) r10)
  (declare (struct scm) r14)
  (declare (struct scm) r15)
  (declare (struct scm) r25)
  (refcount-dec env2498 1)
  (declare (struct scm) clor2)
  (set! clor2 (scm-wrap-fptr scm-print))
  (declare (struct scm) clor6)
  (set! clor6 (scm-wrap-fptr church-num))
  (declare (struct scm) clor11)
  (set! clor11 (scm-wrap-fptr mul))
  (declare (struct scm) clor16)
  (set! clor16 (scm-wrap-fptr add))
  (declare (struct scm) clor19)
  (set! clor19 (scm-wrap-fptr three))
  (declare (type scm-fptr) clo20)
  (declare (struct scm) env21)
  (set! clo20
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor19 val) v) elt) 0)
        val)
      f))
  (set! env21
    (array-ref (struct->ref (struct-ref (struct-ref clor19 val) v) elt) 1))
  (refcount-inc-one env21)
  (set! r14 (clo20 env21))
  (refcount-dec-one clor19)
  (declare (struct scm) clor22)
  (set! clor22 (scm-wrap-fptr two))
  (declare (type scm-fptr) clo23)
  (declare (struct scm) env24)
  (set! clo23
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor22 val) v) elt) 0)
        val)
      f))
  (set! env24
    (array-ref (struct->ref (struct-ref (struct-ref clor22 val) v) elt) 1))
  (refcount-inc-one env24)
  (set! r15 (clo23 env24))
  (refcount-dec-one clor22)
  (declare (type scm-fptr) clo17)
  (declare (struct scm) env18)
  (set! clo17
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor16 val) v) elt) 0)
        val)
      f))
  (set! env18
    (array-ref (struct->ref (struct-ref (struct-ref clor16 val) v) elt) 1))
  (refcount-inc-one env18)
  (set! r9 (clo17 env18 r14 r15))
  (refcount-dec-one clor16)
  (declare (struct scm) clor26)
  (set! clor26 (scm-wrap-fptr num-church))
  (set! r25 (make-struct (struct scm) (tag 0) (val.i 5)))
  (declare (type scm-fptr) clo27)
  (declare (struct scm) env28)
  (set! clo27
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor26 val) v) elt) 0)
        val)
      f))
  (set! env28
    (array-ref (struct->ref (struct-ref (struct-ref clor26 val) v) elt) 1))
  (refcount-inc-one env28)
  (set! r10 (clo27 env28 r25))
  (refcount-dec-one clor26)
  (declare (type scm-fptr) clo12)
  (declare (struct scm) env13)
  (set! clo12
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor11 val) v) elt) 0)
        val)
      f))
  (set! env13
    (array-ref (struct->ref (struct-ref (struct-ref clor11 val) v) elt) 1))
  (refcount-inc-one env13)
  (set! r5 (clo12 env13 r9 r10))
  (refcount-dec-one clor11)
  (declare (type scm-fptr) clo7)
  (declare (struct scm) env8)
  (set! clo7
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor6 val) v) elt) 0)
        val)
      f))
  (set! env8
    (array-ref (struct->ref (struct-ref (struct-ref clor6 val) v) elt) 1))
  (refcount-inc-one env8)
  (set! r1 (clo7 env8 r5))
  (refcount-dec-one clor6)
  (declare (type scm-fptr) clo3)
  (declare (struct scm) env4)
  (set! clo3
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor2 val) v) elt) 0)
        val)
      f))
  (set! env4
    (array-ref (struct->ref (struct-ref (struct-ref clor2 val) v) elt) 1))
  (refcount-inc-one env4)
  (set! r0 (clo3 env4 r1))
  (refcount-dec-one clor2)
  (return r0))

(define ((struct scm) church-num ((struct scm) env2498) ((struct scm) n))
  (declare (struct scm) r29)
  (declare (struct scm) r30)
  (declare (struct scm) r31)
  (declare (struct scm) r35)
  (refcount-dec env2498 1)
  (declare (struct scm) clor32)
  (set! clor32 n)
  (set! r30 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r35 (allocate-vector 0))
  (set! r31 (make-closure g2499 r35))
  (declare (type scm-fptr) clo33)
  (declare (struct scm) env34)
  (set! clo33
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor32 val) v) elt) 0)
        val)
      f))
  (set! env34
    (array-ref (struct->ref (struct-ref (struct-ref clor32 val) v) elt) 1))
  (refcount-inc-one env34)
  (set! r29 (clo33 env34 r30 r31))
  (refcount-dec-one clor32)
  (return r29))

(define ((struct scm)
         begin
         ((struct scm) env2498)
         ((struct scm) a)
         ((struct scm) b))
  (declare (struct scm) r36)
  (refcount-dec env2498 1)
  (refcount-dec a 1)
  (set! r36 b)
  (return r36))

(define ((struct scm) num-church ((struct scm) env2498) ((struct scm) n))
  (declare (struct scm) r37)
  (declare (struct scm) r38)
  (declare (struct scm) r42)
  (declare (struct scm) r43)
  (declare (struct scm) r44)
  (refcount-dec env2498 1)
  (declare (struct scm) clor39)
  (set! r42 (allocate-vector 0))
  (set! clor39 (make-closure g2500 r42))
  (set! r44 n)
  (set! r43 (allocate-vector 1))
  (scm-vector-insert! r43 r44 0)
  (set! r38 (make-closure g2501 r43))
  (declare (type scm-fptr) clo40)
  (declare (struct scm) env41)
  (set! clo40
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor39 val) v) elt) 0)
        val)
      f))
  (set! env41
    (array-ref (struct->ref (struct-ref (struct-ref clor39 val) v) elt) 1))
  (refcount-inc-one env41)
  (set! r37 (clo40 env41 r38))
  (refcount-dec-one clor39)
  (return r37))

(define ((struct scm) zero ((struct scm) env2498))
  (declare (struct scm) r45)
  (declare (struct scm) r46)
  (refcount-dec env2498 1)
  (set! r46 (allocate-vector 0))
  (set! r45 (make-closure g2502 r46))
  (return r45))

(define ((struct scm) one ((struct scm) env2498))
  (declare (struct scm) r47)
  (declare (struct scm) r48)
  (refcount-dec env2498 1)
  (set! r48 (allocate-vector 0))
  (set! r47 (make-closure g2503 r48))
  (return r47))

(define ((struct scm) two ((struct scm) env2498))
  (declare (struct scm) r49)
  (declare (struct scm) r50)
  (refcount-dec env2498 1)
  (set! r50 (allocate-vector 0))
  (set! r49 (make-closure g2504 r50))
  (return r49))

(define ((struct scm) three ((struct scm) env2498))
  (declare (struct scm) r51)
  (declare (struct scm) r52)
  (refcount-dec env2498 1)
  (set! r52 (allocate-vector 0))
  (set! r51 (make-closure g2505 r52))
  (return r51))

(define ((struct scm)
         add
         ((struct scm) env2498)
         ((struct scm) x)
         ((struct scm) y))
  (declare (struct scm) r53)
  (declare (struct scm) r54)
  (declare (struct scm) r55)
  (declare (struct scm) r56)
  (refcount-dec env2498 1)
  (set! r55 x)
  (set! r56 y)
  (set! r54 (allocate-vector 2))
  (scm-vector-insert! r54 r55 0)
  (scm-vector-insert! r54 r56 1)
  (set! r53 (make-closure g2506 r54))
  (return r53))

(define ((struct scm)
         mul
         ((struct scm) env2498)
         ((struct scm) x)
         ((struct scm) y))
  (declare (struct scm) r57)
  (declare (struct scm) r58)
  (declare (struct scm) r59)
  (declare (struct scm) r60)
  (refcount-dec env2498 1)
  (set! r59 y)
  (set! r60 x)
  (set! r58 (allocate-vector 2))
  (scm-vector-insert! r58 r59 0)
  (scm-vector-insert! r58 r60 1)
  (set! r57 (make-closure g2508 r58))
  (return r57))

(define ((struct scm)
         g2508
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r61)
  (declare (struct scm) r62)
  (declare (struct scm) r63)
  (declare (struct scm) r67)
  (declare (struct scm) r68)
  (declare (struct scm) r69)
  (declare (struct scm) r70)
  (declare (struct scm) r71)
  (declare (struct scm) r72)
  (declare (struct scm) r73)
  (declare (struct scm) r74)
  (declare (struct scm) r75)
  (refcount-inc env2498 1)
  (declare (struct scm) clor64)
  (set! r67 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r68 env2498)
  (set! r69 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! clor64 (scm-vector-ref r67 r68 r69))
  (set! r62 z)
  (set! r71 s)
  (set! r73 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r74 env2498)
  (set! r75 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r72 (scm-vector-ref r73 r74 r75))
  (set! r70 (allocate-vector 2))
  (scm-vector-insert! r70 r71 0)
  (scm-vector-insert! r70 r72 1)
  (set! r63 (make-closure g2507 r70))
  (declare (type scm-fptr) clo65)
  (declare (struct scm) env66)
  (set! clo65
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor64 val) v) elt) 0)
        val)
      f))
  (set! env66
    (array-ref (struct->ref (struct-ref (struct-ref clor64 val) v) elt) 1))
  (refcount-inc-one env66)
  (set! r61 (clo65 env66 r62 r63))
  (refcount-dec-one clor64)
  (return r61))

(define ((struct scm) g2507 ((struct scm) env2498) ((struct scm) z))
  (declare (struct scm) r76)
  (declare (struct scm) r77)
  (declare (struct scm) r78)
  (declare (struct scm) r82)
  (declare (struct scm) r83)
  (declare (struct scm) r84)
  (declare (struct scm) r85)
  (declare (struct scm) r86)
  (declare (struct scm) r87)
  (refcount-inc env2498 1)
  (declare (struct scm) clor79)
  (set! r82 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r83 env2498)
  (set! r84 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! clor79 (scm-vector-ref r82 r83 r84))
  (set! r77 z)
  (set! r85 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r86 env2498)
  (set! r87 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r78 (scm-vector-ref r85 r86 r87))
  (declare (type scm-fptr) clo80)
  (declare (struct scm) env81)
  (set! clo80
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor79 val) v) elt) 0)
        val)
      f))
  (set! env81
    (array-ref (struct->ref (struct-ref (struct-ref clor79 val) v) elt) 1))
  (refcount-inc-one env81)
  (set! r76 (clo80 env81 r77 r78))
  (refcount-dec-one clor79)
  (return r76))

(define ((struct scm)
         g2506
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r88)
  (declare (struct scm) r89)
  (declare (struct scm) r90)
  (declare (struct scm) r94)
  (declare (struct scm) r95)
  (declare (struct scm) r96)
  (declare (struct scm) r97)
  (declare (struct scm) r98)
  (declare (struct scm) r102)
  (declare (struct scm) r103)
  (declare (struct scm) r104)
  (refcount-inc env2498 1)
  (refcount-inc s 1)
  (declare (struct scm) clor91)
  (set! r94 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r95 env2498)
  (set! r96 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! clor91 (scm-vector-ref r94 r95 r96))
  (declare (struct scm) clor99)
  (set! r102 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r103 env2498)
  (set! r104 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! clor99 (scm-vector-ref r102 r103 r104))
  (set! r97 z)
  (set! r98 s)
  (declare (type scm-fptr) clo100)
  (declare (struct scm) env101)
  (set! clo100
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor99 val) v) elt) 0)
        val)
      f))
  (set! env101
    (array-ref (struct->ref (struct-ref (struct-ref clor99 val) v) elt) 1))
  (refcount-inc-one env101)
  (set! r89 (clo100 env101 r97 r98))
  (refcount-dec-one clor99)
  (set! r90 s)
  (declare (type scm-fptr) clo92)
  (declare (struct scm) env93)
  (set! clo92
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor91 val) v) elt) 0)
        val)
      f))
  (set! env93
    (array-ref (struct->ref (struct-ref (struct-ref clor91 val) v) elt) 1))
  (refcount-inc-one env93)
  (set! r88 (clo92 env93 r89 r90))
  (refcount-dec-one clor91)
  (return r88))

(define ((struct scm)
         g2505
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r105)
  (declare (struct scm) r106)
  (declare (struct scm) r110)
  (declare (struct scm) r114)
  (refcount-dec env2498 1)
  (refcount-inc s 2)
  (declare (struct scm) clor107)
  (set! clor107 s)
  (declare (struct scm) clor111)
  (set! clor111 s)
  (declare (struct scm) clor115)
  (set! clor115 s)
  (set! r114 z)
  (declare (type scm-fptr) clo116)
  (declare (struct scm) env117)
  (set! clo116
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor115 val) v) elt) 0)
        val)
      f))
  (set! env117
    (array-ref (struct->ref (struct-ref (struct-ref clor115 val) v) elt) 1))
  (refcount-inc-one env117)
  (set! r110 (clo116 env117 r114))
  (refcount-dec-one clor115)
  (declare (type scm-fptr) clo112)
  (declare (struct scm) env113)
  (set! clo112
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor111 val) v) elt) 0)
        val)
      f))
  (set! env113
    (array-ref (struct->ref (struct-ref (struct-ref clor111 val) v) elt) 1))
  (refcount-inc-one env113)
  (set! r106 (clo112 env113 r110))
  (refcount-dec-one clor111)
  (declare (type scm-fptr) clo108)
  (declare (struct scm) env109)
  (set! clo108
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor107 val) v) elt) 0)
        val)
      f))
  (set! env109
    (array-ref (struct->ref (struct-ref (struct-ref clor107 val) v) elt) 1))
  (refcount-inc-one env109)
  (set! r105 (clo108 env109 r106))
  (refcount-dec-one clor107)
  (return r105))

(define ((struct scm)
         g2504
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r118)
  (declare (struct scm) r119)
  (declare (struct scm) r123)
  (refcount-dec env2498 1)
  (refcount-inc s 1)
  (declare (struct scm) clor120)
  (set! clor120 s)
  (declare (struct scm) clor124)
  (set! clor124 s)
  (set! r123 z)
  (declare (type scm-fptr) clo125)
  (declare (struct scm) env126)
  (set! clo125
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor124 val) v) elt) 0)
        val)
      f))
  (set! env126
    (array-ref (struct->ref (struct-ref (struct-ref clor124 val) v) elt) 1))
  (refcount-inc-one env126)
  (set! r119 (clo125 env126 r123))
  (refcount-dec-one clor124)
  (declare (type scm-fptr) clo121)
  (declare (struct scm) env122)
  (set! clo121
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor120 val) v) elt) 0)
        val)
      f))
  (set! env122
    (array-ref (struct->ref (struct-ref (struct-ref clor120 val) v) elt) 1))
  (refcount-inc-one env122)
  (set! r118 (clo121 env122 r119))
  (refcount-dec-one clor120)
  (return r118))

(define ((struct scm)
         g2503
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r127)
  (declare (struct scm) r128)
  (refcount-dec env2498 1)
  (declare (struct scm) clor129)
  (set! clor129 s)
  (set! r128 z)
  (declare (type scm-fptr) clo130)
  (declare (struct scm) env131)
  (set! clo130
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor129 val) v) elt) 0)
        val)
      f))
  (set! env131
    (array-ref (struct->ref (struct-ref (struct-ref clor129 val) v) elt) 1))
  (refcount-inc-one env131)
  (set! r127 (clo130 env131 r128))
  (refcount-dec-one clor129)
  (return r127))

(define ((struct scm)
         g2502
         ((struct scm) env2498)
         ((struct scm) z)
         ((struct scm) s))
  (declare (struct scm) r132)
  (refcount-dec env2498 1)
  (refcount-dec s 1)
  (set! r132 z)
  (return r132))

(define ((struct scm)
         g2501
         ((struct scm) env2498)
         ((struct scm) f)
         ((struct scm) i)
         ((struct scm) c))
  (declare (struct scm) r133)
  (declare (struct scm) r134)
  (declare (struct scm) r135)
  (declare (struct scm) r136)
  (declare (struct scm) r140)
  (declare (struct scm) r141)
  (declare (struct scm) r142)
  (declare (struct scm) r143)
  (declare (struct scm) r144)
  (declare (struct scm) r145)
  (declare (struct scm) r149)
  (declare (struct scm) r150)
  (declare (struct scm) r154)
  (declare (struct scm) r155)
  (refcount-inc f 1)
  (refcount-inc i 1)
  (declare (struct scm) clor137)
  (set! clor137 (scm-wrap-fptr scm-eq))
  (set! r135 i)
  (set! r140 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r141 env2498)
  (set! r142 (make-struct (struct scm) (tag 0) (val.i 0)))
  (set! r136 (scm-vector-ref r140 r141 r142))
  (declare (type scm-fptr) clo138)
  (declare (struct scm) env139)
  (set! clo138
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor137 val) v) elt) 0)
        val)
      f))
  (set! env139
    (array-ref (struct->ref (struct-ref (struct-ref clor137 val) v) elt) 1))
  (refcount-inc-one env139)
  (set! r134 (clo138 env139 r135 r136))
  (refcount-dec-one clor137)
  (if (scm-extract-truth r134)
    (begin (refcount-dec f 2) (refcount-dec i 1) (set! r133 c))
    (begin
      (declare (struct scm) clor146)
      (set! clor146 f)
      (set! r143 f)
      (declare (struct scm) clor151)
      (set! clor151 (scm-wrap-fptr scm-plus))
      (set! r149 (make-struct (struct scm) (tag 0) (val.i 1)))
      (set! r150 i)
      (declare (type scm-fptr) clo152)
      (declare (struct scm) env153)
      (set! clo152
        (struct-ref
          (struct-ref
            (array-ref
              (struct->ref (struct-ref (struct-ref clor151 val) v) elt)
              0)
            val)
          f))
      (set! env153
        (array-ref
          (struct->ref (struct-ref (struct-ref clor151 val) v) elt)
          1))
      (refcount-inc-one env153)
      (set! r144 (clo152 env153 r149 r150))
      (refcount-dec-one clor151)
      (declare (struct scm) clor156)
      (set! clor156 (scm-wrap-fptr add))
      (declare (struct scm) clor159)
      (set! clor159 (scm-wrap-fptr one))
      (declare (type scm-fptr) clo160)
      (declare (struct scm) env161)
      (set! clo160
        (struct-ref
          (struct-ref
            (array-ref
              (struct->ref (struct-ref (struct-ref clor159 val) v) elt)
              0)
            val)
          f))
      (set! env161
        (array-ref
          (struct->ref (struct-ref (struct-ref clor159 val) v) elt)
          1))
      (refcount-inc-one env161)
      (set! r154 (clo160 env161))
      (refcount-dec-one clor159)
      (set! r155 c)
      (declare (type scm-fptr) clo157)
      (declare (struct scm) env158)
      (set! clo157
        (struct-ref
          (struct-ref
            (array-ref
              (struct->ref (struct-ref (struct-ref clor156 val) v) elt)
              0)
            val)
          f))
      (set! env158
        (array-ref
          (struct->ref (struct-ref (struct-ref clor156 val) v) elt)
          1))
      (refcount-inc-one env158)
      (set! r145 (clo157 env158 r154 r155))
      (refcount-dec-one clor156)
      (declare (type scm-fptr) clo147)
      (declare (struct scm) env148)
      (set! clo147
        (struct-ref
          (struct-ref
            (array-ref
              (struct->ref (struct-ref (struct-ref clor146 val) v) elt)
              0)
            val)
          f))
      (set! env148
        (array-ref
          (struct->ref (struct-ref (struct-ref clor146 val) v) elt)
          1))
      (refcount-inc-one env148)
      (set! r133 (clo147 env148 r143 r144 r145))
      (refcount-dec-one clor146)))
  (return r133))

(define ((struct scm) g2500 ((struct scm) env2498) ((struct scm) aux))
  (declare (struct scm) r162)
  (declare (struct scm) r163)
  (declare (struct scm) r164)
  (declare (struct scm) r165)
  (refcount-dec env2498 1)
  (refcount-inc aux 1)
  (declare (struct scm) clor166)
  (set! clor166 aux)
  (set! r163 aux)
  (set! r164 (make-struct (struct scm) (tag 0) (val.i 0)))
  (declare (struct scm) clor169)
  (set! clor169 (scm-wrap-fptr zero))
  (declare (type scm-fptr) clo170)
  (declare (struct scm) env171)
  (set! clo170
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor169 val) v) elt) 0)
        val)
      f))
  (set! env171
    (array-ref (struct->ref (struct-ref (struct-ref clor169 val) v) elt) 1))
  (refcount-inc-one env171)
  (set! r165 (clo170 env171))
  (refcount-dec-one clor169)
  (declare (type scm-fptr) clo167)
  (declare (struct scm) env168)
  (set! clo167
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor166 val) v) elt) 0)
        val)
      f))
  (set! env168
    (array-ref (struct->ref (struct-ref (struct-ref clor166 val) v) elt) 1))
  (refcount-inc-one env168)
  (set! r162 (clo167 env168 r163 r164 r165))
  (refcount-dec-one clor166)
  (return r162))

(define ((struct scm) g2499 ((struct scm) env2498) ((struct scm) i))
  (declare (struct scm) r172)
  (declare (struct scm) r173)
  (declare (struct scm) r174)
  (refcount-dec env2498 1)
  (declare (struct scm) clor175)
  (set! clor175 (scm-wrap-fptr scm-plus))
  (set! r173 (make-struct (struct scm) (tag 0) (val.i 1)))
  (set! r174 i)
  (declare (type scm-fptr) clo176)
  (declare (struct scm) env177)
  (set! clo176
    (struct-ref
      (struct-ref
        (array-ref (struct->ref (struct-ref (struct-ref clor175 val) v) elt) 0)
        val)
      f))
  (set! env177
    (array-ref (struct->ref (struct-ref (struct-ref clor175 val) v) elt) 1))
  (refcount-inc-one env177)
  (set! r172 (clo176 env177 r173 r174))
  (refcount-dec-one clor175)
  (return r172))

